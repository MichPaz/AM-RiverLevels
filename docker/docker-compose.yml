version: '3'

services:
  am-river-rdm:
    build: ./docker-rdm
    command: ["bash","/usr/src/api/start.sh"]
    restart: always
    ports:
      - "${RDM_PORT}:${RDM_PORT}"
    expose:
      - "${RDM_PORT}"
    container_name: ${RDM_HOST}
    depends_on:
      - am-river-psql
    volumes:
      - ${RDM_PATH}:/usr/src/api
      - ${STORAGE_PATH}/rdm/storage/json:/usr/src/storage/json
    env_file:
      - ./.env
    environment:
      # - RDM_HOST=${RDM_HOST}
      - FORCE=${FORCE}
      - NPM_INSTALL=${NPM_INSTALL}

  am-river-view:
    build: ./docker-view
    stdin_open: "${STDIN_OPEN}"
    command: ["bash","/usr/src/api/start.sh"]
    restart: always
    ports:
      - "${VIEW_PORT}:${VIEW_PORT}"
    expose:
      - "${VIEW_PORT}"
    container_name: ${VIEW_HOST}
    # depends_on:
    #   - am-river-psql
    volumes:
      - ${VIEW_PATH}:/usr/src/api
    env_file:
      - ./.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - NPM_INSTALL=${NPM_INSTALL}

  am-river-psql:
    build: ./docker-psql
    container_name: ${PSQL_HOST}
    restart: always
    expose:
      - "5432"
    volumes:
      - ${PSQL_PATH}/data:/var/lib/postgresql/data